"(24) Write a query to display book issue number, member name, date or registration, 
date of expiry, book title, category author, price, date of issue, date of return, 
actual returned date, issue status, fine 
amount."											
"(25) Write a query to display the member id, member name and number of remaining books 
he/she can take with “REMAININGBOOKS” as alias name. HINT: Assuming a member can take maximum 3 
books. 
For example, Ramesh has already taken 2 books; he can take only one book now. 
Hence display the remaining books as 1 in below format.

Example:

MEMBER_ID MEMBER_NAME REMAININGBOOKS

LM001 RAMESH 1

LM002 MOHAN 3"


CREATE TABLE LMS_BOOK_ISSUE (
  BOOK_ISSUE_NO INT PRIMARY KEY,
  MEMBER_ID VARCHAR(10) FOREIGN KEY REFERENCES LMS_MEMBERS(MEMBER_ID),
  BOOK_CODE VARCHAR(10) FOREIGN KEY REFERENCES LMS_BOOK_DETAILS(BOOK_CODE),
  DATE_ISSUE DATE,
  DATE_RETURN DATE,
  DATE_RETURNED DATE,
  BOOK_ISSUE_STATUS VARCHAR(20),
  FINE_RANGE VARCHAR(3) FOREIGN KEY REFERENCES LMS_FINE_DETAILS(FINE_RANGE)
);

CREATE TABLE LMS_MEMBERS (
  MEMBER_ID VARCHAR(10) PRIMARY KEY,
  MEMBER_NAME VARCHAR(30),
  CITY VARCHAR(20),
  DATE_REGISTER DATE,
  DATE_EXPIRE DATE,
  MEMBERSHIP_STATUS VARCHAR(15)
);

CREATE TABLE LMS_BOOK_DETAILS(BOOK_CODE VARCHAR(10) PRIMARY KEY, BOOK_TITLE VARCHAR(50),
	CATEGORY VARCHAR(15), AUTHOR VARCHAR(30), PUBLICATION VARCHAR(30), PUBLISH_DATE DATE,
	BOOK_EDITION INT, PRICE FLOAT, RACK_NUM VARCHAR(3), DATE_ARRIVAL DATE, SUPPLIER_ID VARCHAR(3))

CREATE TABLE LMS_FINE_DETAILS(FINE_RANGE VARCHAR(3) PRIMARY KEY, FINE_AMOUNT FLOAT)

CREATE TABLE LMS_SUPPLIERS_DETAILS(SUPPLIER_ID VARCHAR(3) PRIMARY KEY, SUPPLIER_NAME  VARCHAR(30),
	ADDRESS VARCHAR(50),CONTACT INT, EMAIL VARCHAR(15))

ALTER TABLE LMS_BOOK_DETAILS ADD CONSTRAINT fk_supplier_id FOREIGN KEY (SUPPLIER_ID) REFERENCES LMS_SUPPLIERS_DETAILS (SUPPLIER_ID)

SELECT * FROM LMS_BOOK_ISSUE
SELECT * FROM LMS_MEMBERS--
SELECT * FROM LMS_BOOK_DETAILS
SELECT * FROM LMS_FINE_DETAILS
SELECT * FROM LMS_SUPPLIERS_DETAILS--

INSERT INTO LMS_BOOK_ISSUE VALUES (1, 'LM001', 'BL000010', '2012-05-01', '2012-05-16', '2012-05-16', 'OK', 'R0');
INSERT INTO LMS_BOOK_ISSUE VALUES (2,'LM002','BL000002','2012-05-01','2012-05-06','2012-05-16','OK','R2');
INSERT INTO LMS_BOOK_ISSUE VALUES (3,'LM003','BL000007','2012-04-01','2012-04-06','2012-05-20','OK','R1');
INSERT INTO LMS_BOOK_ISSUE VALUES (4,'LM004','BL000005','2012-04-01','2012-04-16','2012-04-20','OK','R1');
INSERT INTO LMS_BOOK_ISSUE VALUES (5,'LM005','BL000008','2012-03-30','2012-04-15','2012-04-20','OK','R1');
INSERT INTO LMS_BOOK_ISSUE VALUES (6,'LM006','BL000008','2012-04-20','2012-05-05','2012-04-05','OK','R0');
INSERT INTO LMS_BOOK_ISSUE VALUES (7,'LM007','BL000007','2012-04-22','2012-05-25','2012-05-25','OK','R4');

DELETE FROM LMS_BOOK_ISSUE WHERE FINE_RANGE='R1';

INSERT INTO LMS_MEMBERS VALUES('LM001','AMIT', 'CHENNAI','2012-02-12', '2013-02-11','Temporary')
INSERT INTO LMS_MEMBERS VALUES('LM002','ABDHUL', 'DELHI','2012-04-10', '2013-04-09','Temporary')
INSERT INTO LMS_MEMBERS VALUES('LM003','GAYAN', 'CHENNAI','2012-05-13', '2013-05-12','Permanent')
INSERT INTO LMS_MEMBERS VALUES('LM004','RADHA', 'CHENNAI','2012-04-22', '2013-04-21','Temporary')
INSERT INTO LMS_MEMBERS VALUES('LM005','GURU', 'BANGALORE','2012-03-30', '2013-05-16','Temporary')
INSERT INTO LMS_MEMBERS VALUES('LM006','MOHAN', 'CHENNAI','2012-04-12', '2013-05-16','Temporary')

INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000010','Java ForvDummies','JAVA','Paul J.Deitel','Prentice Hall','1999-12-10',6,575.00,'A1','2000-11-10','S01');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000002','Java : The Complete R...','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-11-10','S02');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000003','Java How To Do Prog...','JAVA','Paul J.Deitel','Prentice Hall','1999-05-10',6,600.00,'A1','2000-11-10','S03');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000004','Java : The Complete R...','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-11-10','S02');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000005','Java How To Do Prog...','JAVA','Paul J.Deitel','Prentice Hall','1999-12-10',6,600.00,'A1','2000-11-10','S03');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000006','Java : The Complete R...','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-11-10','S02');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000007','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-12-11',9,500.00,'A3','2012-11-10','S04');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000008','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,500.00,'A3','2012-11-10','S05');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000009','Let Us C','C#','Yashavant Kanetkar','BPB Publications','2010-05-12',9,550.00,'A3','2012-11-10','S06');
INSERT INTO LMS_BOOK_DETAILS VALUES ('BL000011','Let Us C','C++','Yashavant Kanetkar','BPB Publications','2010-05-12',9,650.00,'A3','2012-11-10','S06');


INSERT INTO LMS_FINE_DETAILS VALUES ('RO',0.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R1',20.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R2',50.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R3',75.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R4',100.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R5',150.00);
INSERT INTO LMS_FINE_DETAILS VALUES ('R6',200.00);

update LMS_FINE_DETAILS SET FINE_RANGE='R0' WHERE FINE_AMOUNT=0;


INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S01','SINGAPORE SHOPPEE','CHENNAI', 98941235,'sing@gamil.com')
INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S02','JK Stores','MUMBAI', 99401234,'jks@yahoo.com')
INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S03','ROSE BOOK STORE','TRIVANDRUM', 86300014,'rose@gamil.com')
INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S04','KAVARI STORE','DELHI', 98941235,'kavi@redif.com')
INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S05','EINSTEN BOOK GALLERY','US', 95420000,'eingal@aol.com')
INSERT INTO LMS_SUPPLIERS_DETAILS VALUES('S06','AKBAR STORE','MUMBAI', 78556231,'askbakst@aol.com')

--DESC LMS_BOOK_DETAILS;
--1
SELECT * FROM LMS_BOOK_DETAILS
exec sp_columns LMS_BOOK_DETAILS

--2
SELECT * FROM LMS_FINE_DETAILS

--3
SELECT MEMBER_NAME FROM LMS_MEMBERS WHERE CITY = 'CHENNAI'

--4
SELECT MEMBER_ID,MEMBER_NAME,CITY,MEMBERSHIP_STATUS 
	from LMS_MEMBERS where MEMBERSHIP_STATUS='permanent';

--5
select b1. MEMBER_ID,b1.MEMBER_NAME,b2.BOOK_CODE 
	from LMS_MEMBERS b1,LMS_BOOK_ISSUE b2 where b2.BOOK_CODE='BL000002'
--SELECT m.member_id,m.member_name FROM LMS_MEMBERS m 
	--INNER JOIN LMS_BOOK_ISSUE ON m.member_id = LMS_BOOK_ISSUE.member_id WHERE LMS_BOOK_ISSUE.book_code = 'BL000002';

--6
SELECT BOOK_CODE,BOOK_TITLE,AUTHOR FROM LMS_BOOK_DETAILS WHERE AUTHOR like 'P%';

--7
SELECT COUNT(*) AS NO_OF_BOOKS FROM LMS_BOOK_DETAILS  WHERE CATEGORY = 'JAVA'

--8
SELECT CATEGORY,COUNT(CATEGORY)AS NO_OF_BOOKS FROM LMS_BOOK_DETAILS GROUP BY CATEGORY;

--9
SELECT COUNT(*) AS NO_OF_BOOKS FROM LMS_BOOK_DETAILS  WHERE PUBLICATION = 'Prentice Hall'

--10
 SELECT b1.book_code,b2.book_title FROM LMS_BOOK_ISSUE b1 INNER JOIN LMS_BOOK_DETAILS b2 on b1.BOOK_CODE=b2.BOOK_CODE WHERE b1.DATE_ISSUE='2012-04-01';
 --SELECT * FROM LMS_BOOK_ISSUE WHERE date_issue = '2012-04-01'

--11
SELECT MEMBER_ID, MEMBER_NAME, DATE_REGISTER, DATE_EXPIRE FROM LMS_MEMBERS WHERE DATE_EXPIRE < '2013-04-13'

--12
 SELECT MEMBER_ID,MEMBER_NAME,DATE_REGISTER,MEMBERSHIP_STATUS 
	from LMS_MEMBERS where DATE_REGISTER < '2012-03-01' and MEMBERSHIP_STATUS='Temporary';

--13
SELECT MEMBER_ID, MEMBER_NAME FROM LMS_MEMBERS WHERE CITY = 'CHENNAI' OR CITY = 'DELHI'

--14
 SELECT BOOK_TITLE + '_is_written_by' + AUTHOR FROM LMS_BOOK_DETAILS;

--15
SELECT AVG(PRICE) AS AVERAGEPRICE FROM LMS_BOOK_DETAILS WHERE CATEGORY = 'JAVA'

--16
SELECT SUPPLIER_ID, SUPPLIER_NAME, EMAIL FROM LMS_SUPPLIERS_DETAILS WHERE EMAIL LIKE '%gamil%'

--17
 SELECT SUPPLIER_ID,SUPPLIER_NAME,coalesce(CONTACT,EMAIL,ADDRESS) AS CONTACTDETAILS from LMS_SUPPLIERS_DETAILS;

 --18
--select b1. MEMBER_ID,b1.MEMBER_NAME,b2.BOOK_CODE, b3.BOOK_TITLE from LMS_MEMBERS b1,LMS_BOOK_ISSUE b2, LMS_BOOK_DETAILS b3 where b2.BOOK_CODE='BL000002'
 select MEMBER_ID,(select MEMBER_NAME from LMS_MEMBERS where MEMBER_ID=t1.MEMBER_ID )
 as MEMBER_NAME,BOOK_CODE,(select BOOK_TITLE from LMS_BOOK_DETAILS where BOOK_CODE=t1.BOOK_CODE)as BOOK_TITLE from LMS_BOOK_ISSUE t1

 --19
 SELECT T1.MEMBER_ID,(SELECT MEMBER_NAME FROM LMS_MEMBERS WHERE MEMBER_ID=T1.MEMBER_ID)
	AS MEMBER_NAME,(SELECT T2.FINE_RANGE FROM LMS_MEMBERS WHERE MEMBER_ID=T1.MEMBER_ID)
	AS FINE_RANGE,(SELECT FINE_AMOUNT FROM LMS_FINE_DETAILS T2 WHERE FINE_RANGE= T1.FINE_RANGE)
	AS FINE_AMOUNT FROM LMS_BOOK_ISSUE T1 LEFT JOIN LMS_FINE_DETAILS T2 ON T1.FINE_RANGE = T2.FINE_RANGE WHERE T2.FINE_AMOUNT < 100
 --SELECT m.MEMBER_ID,m.MEMBER_NAME,f.FINE_RANGE,f.FINE_AMOUNT FROM LMS_MEMBERS m,LMS_FINE_DETAILS f WHERE f.FINE_AMOUNT<100;

 --20
 SELECT BOOK_CODE,BOOK_TITLE,RACK_NUM FROM LMS_BOOK_DETAILS WHERE RACK_NUM='A1' ORDER BY BOOK_TITLE ASC

 --21
 SELECT T1.MEMBER_ID,MEMBER_NAME,DATE_REGISTER FROM LMS_MEMBERS T1 LEFT JOIN LMS_BOOK_ISSUE T2 ON T1.MEMBER_ID = T2.MEMBER_ID WHERE T2.MEMBER_ID IS NULL
 --SELECT MEMBER_ID, MEMBER_NAME, DATE_REGISTER FROM LMS_MEMBERS

 --22
 select t1.MEMBER_ID,t2.MEMBER_NAME from LMS_BOOK_ISSUE t1 
	join LMS_MEMBERS t2 on t1.MEMBER_ID=t2.MEMBER_ID where t1.DATE_RETURNED>=t1.DATE_RETURNED and YEAR(t1.DATE_RETURNED)=2012

 --23
 SELECT RACK_NUM, COUNT(*) AS NOOFBOOKS FROM LMS_BOOK_DETAILS GROUP BY(RACK_NUM) ORDER BY RACK_NUM ASC

 --24
 select BOOK_ISSUE_NO,MEMBER_NAME,DATE_REGISTER,DATE_EXPIRE,BOOK_TITLE,CATEGORY, PRICE, DATE_ISSUE,DATE_RETURNED,
	(select FINE_AMOUNT from LMS_FINE_DETAILS f where i.FINE_RANGE= f.FINE_RANGE)as 
	FINE_AMOUNT from LMS_BOOK_ISSUE i,LMS_MEMBERS m,LMS_BOOK_DETAILS b where i.MEMBER_ID=m.MEMBER_ID and b.BOOK_CODE=i.BOOK_CODE

--25
select m.MEMBER_ID,MEMBER_NAME,T.cb as REMAINING_BOOKS from LMS_MEMBERS m 
	inner join (select a.member_id,COUNT(i.MEMBER_ID) as cb from LMS_MEMBERS a 
	left outer join LMS_BOOK_ISSUE i on a.MEMBER_ID= i.MEMBER_ID group by a.MEMBER_ID)T on T.MEMBER_ID=m.MEMBER_ID

--26
SELECT TOP 3 * FROM LMS_SUPPLIERS_DETAILS

--27
SELECT * FROM LMS_SUPPLIERS_DETAILS
EXCEPT 
SELECT TOP 3 * FROM LMS_SUPPLIERS_DETAILS

--28
EXEC SP_RENAME 'LMS_MEMBERS', 'LMS_MEMBERS_DETAILS'
-- EXEC SP_RENAME 'LMS_MEMBERS_DETAILS', 'LMS_MEMBERS'

--29
--Cant truncate as it has foriegn keys!
TRUNCATE TABLE LMS_FINE_DETAILS

--30 
SELECT BOOK_TITLE FROM LMS_BOOK_DETAILS
